stl reader{
	bool open(file name)
	set transform (rotation scale and translation in that order ) will efect others
	struct report stats ( numb surfaces max min x y z) O(n) rests enxt to top
	save with name(name)
	struct get next surface(3 vertexes + normal vector)

}

lin model{
	load from file(name)
	save to file(name)
	setconfig(sturct)
	train from(metadata file name, foldername)
	predict(file name)

	uses interpreter
}


interpreter{

	config 
		voxel dimentions 
		gird dimentions 
		sharp corner angle 
	get data(file name)
	setconfig(struct)

	open file find maxima 
	set transform 

	walkthrough each surface
		add to voxel grid 

		count perimiter projection ?
		add to hash table check for corrners ?
			how catch 3 small triangles 1 big 
		count support? 

	for each slice 
		walk in from outof bonds till hit edge walk along edge do perimiter and corrnet count
			keep grid of edges
		color in / count volume 
		continine walk for new edges from same point count number of regions

	walk through surfaces again?
		add support count volume

	will return 
	scale factor*voxel dim(x y z) aka real voxel size ?
	volume in mm
	perimiter in mm
	# of sharp edges
	# number of seperated regions
	support volume mm


}